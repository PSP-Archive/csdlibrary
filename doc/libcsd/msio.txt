/******************************************************************************
 *                                                                            *
 *      msio.c                                                                *
 *                                                                            *
 *      メモリースティック入出力関数                                          *
 *                                                                            *
 ******************************************************************************/

  更新履歴

  2005/06/09 Version 1.01 ・ms_ftell, ms_rewind を追加した。
                          ・ms_fprintf, ms_fputs, ms_fread, ms_fwrite の処理に
                            時間が掛かり過ぎていたので、速く処理できるように
                            変更した。
                          ・ms_fprintf のフォーマット指定で、タイプをsに
                            指定した場合に変換できる文字列の長さが短かったので
                            長くした。
                          ・ms_fgets でファイルの終端に達した場合にバッファsの
                            末尾にヌル文字を付加していなかったので修正した。

  2005/06/03 Version 1.00 ・ms_fclose, ms_fgetc, ms_fgets, ms_fopen,
                            ms_fprintf, ms_fputc, ms_fputs, ms_fread,
                            ms_freopen, ms_fseek, ms_fwrite, ms_remove,
                            ms_rename を追加した。

  関数一覧

 +-----------------------------+------+------+--------------------------------+
 |           関数名            | 追加 | 修正 |              備考              |
 +-----------------------------+------+------+--------------------------------+
 | ms_fclose                   | 1.00 |      |                                |
 | ms_fgetc                    | 1.00 |      |                                |
 | ms_fgets                    | 1.00 | 1.01 |                                |
 | ms_fopen                    | 1.00 |      |                                |
 | ms_fprintf                  | 1.00 | 1.01 |                                |
 | ms_fputc                    | 1.00 |      |                                |
 | ms_fputs                    | 1.00 | 1.01 |                                |
 | ms_fread                    | 1.00 | 1.01 |                                |
 | ms_freopen                  | 1.00 |      |                                |
 | ms_fseek                    | 1.00 |      |                                |
 | ms_ftell                    | 1.01 |      |                                |
 | ms_fwrite                   | 1.00 | 1.01 |                                |
 | ms_remove                   | 1.00 |      |                                |
 | ms_rename                   | 1.00 |      |                                |
 | ms_rewind                   | 1.01 |      |                                |
 +-----------------------------+------+------+--------------------------------+

/******************************************************************************
 *
 * 関 数 名：ms_fclose / MSファイルのクローズ
 *
 * 呼出形式：#include "msio.h"
 *           void ms_fclose(int fd);
 *
 * 解    説：fdに指定されたMSファイルをクローズします。
 *
 * 戻 り 値：ありません。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fgetc / MSファイルからの文字の読み込み
 *
 * 呼出形式：#include "msio.h"
 *           int ms_fgetc(int fd);
 *
 * 解    説：fdに指定されたMSファイルから1文字読み出します。読み込まれた文字は
 *           符号拡張しないでint型に変換されます。fdに指定されたMSファイルのフ
 *           ァイルポインタは次の文字を指すようにインクリメントされます。
 *
 * 戻 り 値：読み込みに成功した場合は文字を返します。エラーが発生した場合やファ
 *           イルの終端に達した場合はEOFを返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fgets / MSファイルからの文字列の取得
 *
 * 呼出形式：#include "msio.h"
 *           char *ms_fgets(char *s, int n, int fd);
 *
 * 解    説：fdに指定されたMSファイルから文字列を読み込み、sに示されるバッファ
 *           に格納します。読み込みは最初の改行文字(\n)を読み込むか、n-1バイト
 *           の文字を読み込むかまで行います。改行文字はそのまま格納されます。s
 *           の末尾にはヌル文字(\0)を付加します。
 *
 * 戻 り 値：取得に成功した場合はバッファのアドレスsを返します。失敗した場合に
 *           はNULLを返します。ファイルの終端に達し、かつ文字を1文字も読み込ん
 *           でいない場合もNULLを返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fopen / MSファイルのオープン
 *
 * 呼出形式：#include "msio.h"
 *           int ms_fopen(const char *fname, const char *mode);
 *
 * 解    説：fnameで示されるMSファイルをオープンします。modeではオープンされる
 *           MSファイルのアクセスモードを文字列で指定します。指定可能な文字は以
 *           下の通りです。
 *           ------------------------------------------------------------------
 *           モード        意味
 *           ------------------------------------------------------------------
 *           r             読み出し専用モードでオープン（存在しないMSファイルを
 *                         指定した場合、ms_fopen関数ではエラーとなります）
 *           w             書き込み専用モードでオープン（既に存在するMSファイル
 *                         を指定した場合、そのMSファイルの内容は破壊されます）
 *           a             追加書き込みモードでオープン（ただし、MSファイルが存
 *                         在しない場合は、書き込み用に作成）
 *           r+            既存MSファイルに対して更新モード（読み出し＋書き込み）
 *                         でオープン
 *           w+            新規MSファイルに対して更新モード（読み出し＋書き込み）
 *                         でオープン（既に存在するMSファイルを指定した場合、そ
 *                         のMSファイルの内容は破壊されます）
 *           a+            既存MSファイルに対して更新モード（読み出し＋書き込み）
 *                         でオープン（ただし、MSファイルが存在しない場合は、作
 *                         成します）
 *           ------------------------------------------------------------------
 *           ※注意
 *             アクセスモードにwやw+を指定した場合、既存MSファイルの内容を破壊
 *             します。慎重に使用して下さい。
 *           
 *           アクセスモードにr+、w+、a+（更新モード）を指定すると、MSファイルに
 *           対する入力/出力の双方を行うことができます。
 *
 * 戻 り 値：オープンされたMSファイルのファイルディスクリプタを返します。エラー
 *           が発生した場合は-1を返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fprintf / MSファイルへの書式指定出力
 *
 * 呼出形式：#include "msio.h"
 *           int ms_fprintf(int fd, const char *format, ...);
 *
 * 解    説：formatに指定された文字列をfdに指定されたMSファイルに書き出します。
 *           argumentがある場合はformatで示されるフォーマット指定にしたがって出
 *           力されます。フォーマット指定の指定方法および機能はsprintfと同一で
 *           す。フォーマット指定についてはsprintfを参照して下さい。
 *
 * 戻 り 値：出力した文字数を返します。文字数には終端に付加されたヌル文字(\0)は
 *           数えません。エラーが発生した場合はEOFを返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fputc / MSファイルへの文字出力
 *
 * 呼出形式：#include "msio.h"
 *           int ms_fputc(int c, int fd);
 *
 * 解    説：cに指定された文字をfdに指定されたMSファイルに出力します。
 *
 * 戻 り 値：出力した文字を返します。エラーが発生した場合はEOFを返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fputs / MSファイルへの文字列出力
 *
 * 呼出形式：#include "msio.h"
 *           int ms_fputs(const char *s, int fd);
 *
 * 解    説：sで示される文字列をfdに指定されたMSファイルに出力します。sはヌル文
 *           字で終了する文字列でなければなりません。
 *
 * 戻 り 値：最後に出力した文字を返します。エラーが発生した場合はEOFを返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fread / MSファイルからのデータ読み込み
 *
 * 呼出形式：#include "msio.h"
 *           size_t ms_fread(void *ptr, size_t size, size_t n, int fd);
 *
 * 解    説：fdに指定されたMSファイルからsizeバイトのブロックをn個まで読み込み、
 *           ptrに示されるバッファへ格納します。ptrに示されるバッファはsize×n
 *           バイトの領域が確保されている必要があります。
 *
 * 戻 り 値：実際に読み込まれたブロック数を返します。nで指定した数より小さい数
 *           を返す場合にはエラーが発生したり、n個のブロックを読み出す前にファ
 *           イルの終端に達した可能性があります。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_freopen / MSファイルの再割り当て
 *
 * 呼出形式：#include "msio.h"
 *           int ms_freopen(const char *fname, const char *mode, int fd);
 *
 * 解    説：現在fdに指定されたMSファイルをクローズし、fnameで指定されたMSファ
 *           イルにファイルディスクリプタを割り当て直します。modeでは新しくオー
 *           プンするMSファイルのアクセスモードを文字列で指定します。指定可能な
 *           文字は以下の通りです。
 *           ------------------------------------------------------------------
 *           モード        意味
 *           ------------------------------------------------------------------
 *           r             読み出し専用モードでオープン（存在しないMSファイルを
 *                         指定した場合、ms_fopen関数ではエラーとなります）
 *           w             書き込み専用モードでオープン（既に存在するMSファイル
 *                         を指定した場合、そのMSファイルの内容は破壊されます）
 *           a             追加書き込みモードでオープン（ただし、MSファイルが存
 *                         在しない場合は、書き込み用に作成）
 *           r+            既存MSファイルに対して更新モード（読み出し＋書き込み）
 *                         でオープン
 *           w+            新規MSファイルに対して更新モード（読み出し＋書き込み）
 *                         でオープン（既に存在するMSファイルを指定した場合、そ
 *                         のMSファイルの内容は破壊されます）
 *           a+            既存MSファイルに対して更新モード（読み出し＋書き込み）
 *                         でオープン（ただし、MSファイルが存在しない場合は、作
 *                         成します）
 *           ------------------------------------------------------------------
 *           ※注意
 *             アクセスモードにwやw+を指定した場合、既存MSファイルの内容を破壊
 *             します。慎重に使用して下さい。
 *           
 *           アクセスモードにr+、w+、a+（更新モード）を指定すると、MSファイルに
 *           対する入力/出力の双方を行うことができます。
 *
 * 戻 り 値：再割り当てした場合はオープンされたMSファイルのファイルディスクリプ
 *           タを返します。エラーが発生した場合は-1を返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fseek / MSファイルのファイルポインタの移動
 *
 * 呼出形式：#include "msio.h"
 *           int ms_fseek(int fd, long offset, int whence);
 *
 * 解    説：fdに指定されたMSファイルのファイルポインタをwhenceで指定する位置か
 *           らoffsetバイトの場所に移動します。whenceには<msio.h>に定義されてい
 *           る次の記号定数を指定します。
 *           ------------------------------------------------------------------
 *           whence                        意味
 *           ------------------------------------------------------------------
 *           SEEK_SET                      先頭
 *           SEEK_CUR                      現在の位置
 *           SEEK_END                      終端
 *           ------------------------------------------------------------------
 *
 * 戻 り 値：ファイルポインタの移動に成功した場合は0を返します。失敗した場合は
 *           -1を返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_ftell / MSファイルのファイルポインタの取得
 *
 * 呼出形式：#include "msio.h"
 *           long ms_ftell(int fd);
 *
 * 解    説：fdに指定されたMSファイルのファイルポインタを返します。
 *
 * 戻 り 値：ファイルポインタの位置を返します。失敗した場合は-1を返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_fwrite / MSファイルへのデータ書き込み
 *
 * 呼出形式：#include "msio.h"
 *           size_t ms_fwrite(const void *ptr, size_t size, size_t n, int fd);
 *
 * 解    説：ptrで示されるバッファのデータをsizeバイトのブロックで最大n個までfd
 *           に指定されたMSファイルへ出力します。
 *
 * 戻 り 値：実際に書き込んだブロック数を返します。nで指定した数より小さい数を
 *           返す場合にはエラーが発生した可能性があります。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_remove / MSファイルの削除
 *
 * 呼出形式：#include "msio.h"
 *           int ms_remove(const char *fname);
 *
 * 解    説：fnameで示されるMSファイルを削除します。
 *
 * 戻 り 値：削除に成功した場合は0を返します。失敗した場合は-1を返します。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_rename / MSファイルのファイル名変更
 *
 * 呼出形式：#include "msio.h"
 *           int ms_rename(const char *oldname, const char *newname);
 *
 * 解    説：oldnameで示されるファイル名をnewnameに変更します。oldnameとnewname
 *           は同じディレクトリにある必要があります。ワイルドカードを使用するこ
 *           とはできません。
 *
 * 戻 り 値：ファイル名変更に成功した場合は0を返します。失敗した場合は-1を返し
 *           ます。
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 関 数 名：ms_rewind / MSファイルのファイルポインタを先頭に移動
 *
 * 呼出形式：#include "msio.h"
 *           void ms_rewind(int fd);
 *
 * 解    説：fdに指定されたMSファイルのファイルポインタをファイルの先頭へ移動し
 *           ます。ms_rewindはfseek(fd, 0, SEEK_SET)と同義ですが、戻り値を返し
 *           ません。
 *
 * 戻 り 値：ありません。
 *
 ******************************************************************************/

